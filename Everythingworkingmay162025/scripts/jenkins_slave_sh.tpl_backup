#!/bin/bash
set -xe

# Check if curl is already installed. If not, install it
if ! command -v curl &> /dev/null; then
    echo "curl not found, installing..."
    sudo yum install -y curl || { echo "Failed to install curl, exiting."; exit 1; }
else
    echo "curl is already installed."
fi

# Install other dependencies: wget, unzip, and jq
echo "Installing dependencies..."
sudo yum install -y \
    wget \
    unzip \
    jq

# Try installing Amazon Corretto 17
if sudo yum install -y java-17-amazon-corretto; then
  echo "Amazon Corretto 17 installed successfully."
else
  echo "Failed to install Amazon Corretto 17. Trying OpenJDK 11..."
  if sudo yum install -y java-11-openjdk; then
    echo "OpenJDK 11 installed successfully."
  else
    echo "Failed to install OpenJDK 11. Trying OpenJDK 8..."
    sudo yum install -y java-1.8.0-openjdk-devel || { echo "Failed to install Java, exiting."; exit 1; }
  fi
fi

# Fix /tmp disk space issue (remount from disk instead of tmpfs)
# Fix /tmp disk space issue (avoid tmpfs usage)
echo "üîß Checking if /tmp is tmpfs and replacing it if needed..."
if mount | grep -qE '/tmp type tmpfs'; then
  echo "‚ö†Ô∏è /tmp is on tmpfs. Using /var/tmp_disk instead..."
  sudo mkdir -p /var/tmp_disk
  sudo chmod 1777 /var/tmp_disk
  sudo mount --bind /var/tmp_disk /tmp
  echo "‚úÖ /tmp is now mounted from /var/tmp_disk"
else
  echo "‚úÖ /tmp is already on disk. No remount needed."
fi


# Jenkins connection config
JENKINS_URL="${jenkins_url}"
SLAVE_NAME="${slave_name}"   # Passed from Terraform
JENKINS_USER="admin"
JENKINS_PASS="admin"
WORKDIR="/home/ec2-user/jenkins-agent"
MAX_RETRIES=60  # Increased retries

# Wait for Jenkins master to be ready
count=0
until curl -sL "$JENKINS_URL/login" > /dev/null; do
  echo "Waiting for Jenkins to be ready..."
  sleep 10
  count=$((count+1))
  [ "$count" -ge "$MAX_RETRIES" ] && echo "Jenkins not ready after $MAX_RETRIES tries." && exit 1
done

# Wait for this specific slave to be defined in Jenkins
count=0
until curl -s -u "$JENKINS_USER:$JENKINS_PASS" \
    "$JENKINS_URL/computer/$SLAVE_NAME/api/json" \
    | grep -q "\"displayName\":\"$SLAVE_NAME\""; do
  echo "Waiting for $SLAVE_NAME to appear in Jenkins..."
  sleep 10
  count=$((count+1))
  [ "$count" -ge "$MAX_RETRIES" ] && echo "$SLAVE_NAME not registered in Jenkins after $MAX_RETRIES tries." && exit 1
done

# Prepare work directory
mkdir -p "$WORKDIR/remoting"
chown -R ec2-user:ec2-user "$WORKDIR"
chmod -R 755 "$WORKDIR"
cd /home/ec2-user

# Download Jenkins agent JAR
wget -q "$JENKINS_URL/jnlpJars/agent.jar" -O agent.jar
[ ! -f agent.jar ] && echo "agent.jar download failed." && exit 1
chmod 755 agent.jar

# Extract the secret from JNLP XML
SECRET=$(curl -sL -u "$JENKINS_USER:$JENKINS_PASS" \
  "$JENKINS_URL/computer/$SLAVE_NAME/slave-agent.jnlp" \
  | grep -oP '(?<=<argument>)[^<]+' | head -n 1)

# Start the Jenkins agent using new style args
LOG_FILE="/var/log/jenkins-agent.log"
sudo touch "$LOG_FILE"
sudo chown ec2-user:ec2-user "$LOG_FILE"
chmod 644 "$LOG_FILE"

nohup java -jar agent.jar \
  -url "$JENKINS_URL" \
  -name "$SLAVE_NAME" \
  -secret "$SECRET" \
  -workDir "$WORKDIR" \
  > "$LOG_FILE" 2>&1 &

# Wait for agent to report as online in Jenkins
echo "üîÑ Waiting for $SLAVE_NAME to come online in Jenkins..."
retries=0
while true; do
  ONLINE=$(curl -s -u "$JENKINS_USER:$JENKINS_PASS" "$JENKINS_URL/computer/$SLAVE_NAME/api/json" | jq -r '.offline' 2>/dev/null)
  if [[ "$ONLINE" == "false" ]]; then
    echo "‚úÖ Jenkins agent '$SLAVE_NAME' is ONLINE and connected!"
    break
  fi
  sleep 5
  retries=$((retries + 1))
  if [[ $retries -ge $MAX_RETRIES ]]; then
    echo "‚ùå Agent '$SLAVE_NAME' did not come online in time."
    exit 1
  fi
done
